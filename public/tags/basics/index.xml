<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Basics on Minjun Jeon</title>
    <link>https://www.minjunjeon.com/tags/basics/</link>
    <description>Recent content in Basics on Minjun Jeon</description>
    <image>
      <title>Minjun Jeon</title>
      <url>https://www.minjunjeon.com/assets/android-chrome-512x512.png</url>
      <link>https://www.minjunjeon.com/assets/android-chrome-512x512.png</link>
    </image>
    <generator>Hugo -- 0.147.5</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Jun 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.minjunjeon.com/tags/basics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DBT 3. Data Warehouses, Data Lakes, and Lake Houses</title>
      <link>https://www.minjunjeon.com/posts/data_eng/dbt/dbt3/</link>
      <pubDate>Wed, 04 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://www.minjunjeon.com/posts/data_eng/dbt/dbt3/</guid>
      <description>&lt;h2 id=&#34;1-data-warehouses&#34;&gt;1. Data Warehouses&lt;/h2&gt;
&lt;p&gt;A &lt;em&gt;Data Warehouse (DW)&lt;/em&gt; is a centralized repository that aggregates data from multiple sources into a unified, consistent store optimized for analytics and business intelligence (BI) activities, such as reporting, forecasting, and data mining.&lt;/p&gt;
&lt;p&gt;Unlike transactional databases (OLTP), data warehouses are built for &lt;strong&gt;analytical workloads (OLAP)&lt;/strong&gt;: they support complex queries over large volumes of data, often using denormalized schemas, dimensions, and facts for performance.&lt;/p&gt;
&lt;p&gt;Data warehouses typically use:&lt;/p&gt;</description>
    </item>
    <item>
      <title>DBT 4. Denormalized Schema in Data Warehouses</title>
      <link>https://www.minjunjeon.com/posts/data_eng/dbt/dbt4/</link>
      <pubDate>Wed, 04 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://www.minjunjeon.com/posts/data_eng/dbt/dbt4/</guid>
      <description>&lt;h4 id=&#34;1-denormalized-schema&#34;&gt;1. Denormalized Schema&lt;/h4&gt;
&lt;p&gt;A &lt;strong&gt;denormalized schema&lt;/strong&gt; is a database design that reduces the number of joins by &lt;strong&gt;combining related data into fewer tables&lt;/strong&gt;, often at the expense of some redundancy.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Optimized for read-heavy analytical workloads&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Not ideal for OLTP systems (which benefit from normalization)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In a typical data warehouse:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data is modeled to &lt;strong&gt;maximize query performance&lt;/strong&gt; and &lt;strong&gt;simplify analytics&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;This contrasts with normalized schemas used in transactional databases, where the goal is data integrity and avoiding redundancy.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;2-star-and-snowflake-schemas&#34;&gt;2. Star and Snowflake Schemas&lt;/h4&gt;
&lt;p&gt;Two common denormalized designs are:&lt;/p&gt;</description>
    </item>
    <item>
      <title>DBT 5. Modern Data Stack</title>
      <link>https://www.minjunjeon.com/posts/data_eng/dbt/dbt5/</link>
      <pubDate>Wed, 04 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://www.minjunjeon.com/posts/data_eng/dbt/dbt5/</guid>
      <description>&lt;p&gt;As the cost of cloud storage and compute continues to fall and internet speeds rise, data engineers are rethinking how data is stored, processed, and analyzed. This shift has led to what we now call the &lt;strong&gt;modern data stack&lt;/strong&gt;: a flexible, scalable, cloud-native approach that replaces traditional monolithic systems.&lt;/p&gt;
&lt;p&gt;In this post, weâ€™ll explore key architectural changes that enabled the modern data stack, from the transition from &lt;strong&gt;SMP to MPP&lt;/strong&gt;, to the &lt;strong&gt;decoupling of storage and compute&lt;/strong&gt;, and the rise of &lt;strong&gt;columnar databases&lt;/strong&gt;, &lt;strong&gt;ELT workflows&lt;/strong&gt;, and the &lt;strong&gt;tooling ecosystem&lt;/strong&gt; that glues it all together.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DBT 1. Data Maturity Model</title>
      <link>https://www.minjunjeon.com/posts/data_eng/dbt/dbt1/</link>
      <pubDate>Tue, 03 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://www.minjunjeon.com/posts/data_eng/dbt/dbt1/</guid>
      <description>&lt;h2 id=&#34;1-intro&#34;&gt;1. Intro&lt;/h2&gt;
&lt;p&gt;The Maslow&amp;rsquo;s hierarchy of needs models the basic needs of humans as a hierarchy of 5 levels from the bottom to higher-level needs at the top. In this model, one cannot proceed to the next level unless the basic needs of the current level is met.&lt;/p&gt;
&lt;p&gt;Silmiarly, one can think of &lt;em&gt;data hierarchy of needs&lt;/em&gt;. The 5 levels are &lt;strong&gt;Data Collection, Data Wrangling, Data Integration, BI and Analytics, and Artificail Intellgence.&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>1. Big O asymptotic analysis</title>
      <link>https://www.minjunjeon.com/posts/ds_algo/theory/theory1/</link>
      <pubDate>Mon, 02 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://www.minjunjeon.com/posts/ds_algo/theory/theory1/</guid>
      <description>&lt;h2 id=&#34;1-what-is-good-code&#34;&gt;1. What is good code?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Readability : How easily humans can understand, modify, and maintain a piece of code.&lt;/li&gt;
&lt;li&gt;Scalability: How well the code can handle increased load and complexity.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Big O&lt;/em&gt;, a shorthand for &lt;em&gt;Big O asymptotic analysis&lt;/em&gt;, measures the scalability of code. Scalability consists of runtime and memory. There is usally a trade-off between runtime and memory. In this post, we introduce the Big O notation in terms of runtime and look at how to measure the space complexity of an algorithm at the end.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQL 1. Basics</title>
      <link>https://www.minjunjeon.com/posts/data_eng/sql/sql1/</link>
      <pubDate>Thu, 29 May 2025 00:00:00 +0000</pubDate>
      <guid>https://www.minjunjeon.com/posts/data_eng/sql/sql1/</guid>
      <description>&lt;p&gt;Here, we go through basic SQL commands:&lt;/p&gt;
&lt;h2 id=&#34;1-select&#34;&gt;1. SELECT&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;SELECT&lt;/em&gt; is used to select and return data.
For a single column, the syntax is as below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;column_name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table_name1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For multiple columns, you just list the column names with &lt;code&gt;,&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;column_name1,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;column_name2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table_name1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To select all columns, use &lt;code&gt;*&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; table_name1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that &lt;strong&gt;the exact format doesn&amp;rsquo;t matter&lt;/strong&gt;, e.g. the two examples are the same:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
